/**
 * Copyright Notice 
 * 
 * COPYRIGHTÂ© 2015 Build 82. All rights reserved. No part of this software
 * and constituent code may be reproduced in any form, including video recording, 
 * photocopying, downloading, broadcasting or transmission electronically, without 
 * prior written consent of Build 82. Copyright protection includes output
 * generated by this software as displayed in print or in digital form, such as 
 * icons, interfaces, and the like.
 * 
 * Content Warranty 
 * 
 * The information in this document is subject to change without notice. THIS 
 * DOCUMENT IS PROVIDED "AS IS" AND BUILD 82 MAKES NO WARRANTY, EXPRESS, 
 * IMPLIED, OR STATUTORY, INCLUDING BUT NOT LIMITED TO ALL WARRANTIES OF 
 * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT. 
 * Build 82 shall not be liable for errors contained herein or for 
 * incidental or consequential damages in connection with the furnishing, 
 * performance or use of this material.
 */

define(['dojo/query',
		'dojo/_base/fx',
		'dojo/fx',
		'dojo/fx/easing',
		'dojo/aspect',
		'dojo/NodeList-dom',
		'dojo/dom',
		'dojo/dom-construct',
		'dojo/dom-class',
		'dojo/dom-style',
        'dojo/on',
        'dojo/_base/array',
		'ifoe/config',
		'ifoe/menuitem'
        ], 
    function(query, baseFx, fx, easing, aspect, nld, dom, domConstruct, domClass, domStyle, on, baseArray,
		Config, MenuItem) {
		var config = {
			content: Config.Link,
			featureOffset: 50,
			nav_list_id: 'link_list'
		},
		data = {
			menuHandler: null
		},
		
		/**
		 * Handle Menu click while menu is "closed"
		 * @param MouseEvent param_evt only activate when menu link clicked
		 * @returns void
		 */
		handleMenuOn = function(param_evt) {
			if(!clickedAnchorTag(param_evt)) return;
			
			// hide content
			var contentAnimation_ary = []
			query('article').forEach(function(article) {
				contentAnimation_ary.push(baseFx.fadeOut({
					node: article,
					duration: 100
				}));
			});
			query('body>div').forEach(function(project, index) {
				contentAnimation_ary.push(baseFx.fadeOut({
					node: project,
					duration: 100
				}));
			});
			
			// create menu & animations
			var zipperAnimation_ary = [];
			baseArray.forEach(config.content, function(feature, index) {
				var feat_ele = MenuItem(feature);
				domConstruct.place(feat_ele.domNode, config.nav_list_id, 'last');
				
				// animation start style & postiion
				domClass.add(feat_ele.domNode, 'animationStart');
				domStyle.set(feat_ele.domNode, 'left', config.featureOffset * (2 - (index % 2 * 3)) * index/10 + 'px');
				
				// slide in
				zipperAnimation_ary.push(baseFx.animateProperty({
					node: feat_ele.domNode,
					properties: {
						left: 0
					},
					easing: easing.sineOut,
					duration: 200,
					delay: 40 * index
				}));
				
				// fade in
				zipperAnimation_ary.push(baseFx.fadeIn({
					node: feat_ele.domNode,
					duration: 200,
					easing: easing.quadIn,
					delay: 40 * index
				}));
			});
			
			// animate menu
			var hideContent = fx.combine(contentAnimation_ary);
			aspect.after(hideContent, 'onEnd', function() {
				query('article').addClass('hidden');
				query('body>div').addClass('hidden');
				query('nav').toggleClass('hidden');
				fx.combine(zipperAnimation_ary).play();
			});
			hideContent.play();
			
			// set menu handle style
			domClass.add('menu', 'pulseNavAnim');
			
			// set new click event handler
			data.menuHandler.remove();
			data.menuHandler = on(dom.byId('menu'), 'click', function(evt) {
				handleMenuOff(evt);
			});
		},
		
		/**
		 * Handle Menu click while menu is "open"
		 * @param {type} param_evt Mouse Event, menu will not activate if link clicked
		 * @returns void
		 */
		handleMenuOff = function(param_evt) {
			if(!clickedAnchorTag(param_evt)) return;
			
			// construct animation
			var tearAnimation_ary = [];
			query('div.feature').forEach(function(feat, index) {
				// fade out
				tearAnimation_ary.push(baseFx.fadeOut({
					node: feat,
					easing: easing.cubicOut,
					duration: 100
				}));
				
				// slide out
				tearAnimation_ary.push(baseFx.animateProperty({
					node: feat,
					properties: {
						left: config.featureOffset * (2 - (index % 2 * 3))
					},
					duration: 100
				}));
			});
			
			// play & destroy menu
			var tear = fx.combine(tearAnimation_ary);
			aspect.after(tear, 'onEnd', function() {
				query('div.feature').forEach(domConstruct.destroy);
				query('nav').toggleClass('hidden');
				
				// show content
				query('article').removeClass('hidden');
				query('body>div').removeClass('hidden');
				
				// fade in content
				query('article').forEach(function(article) {
					baseFx.fadeIn({
						node: article,
						duration: 100
					}).play();
				});
				query('body>div').forEach(function(project) {
					baseFx.fadeIn({
						node: project,
						duration: 100
					}).play();
				});
				
			});
			tear.play();
			
			// set menu handle style
			domClass.remove('menu', 'pulseNavAnim');
			
			// set new click event handler
			data.menuHandler.remove();
			data.menuHandler = on(dom.byId('menu'), 'click', function(evt) {
				handleMenuOn(evt);
			});
		},
				
		/**
		 * Show / Hide main page content 'article', links will not activate the behavoior
		 * @param {type} param_evt Mouse Event used to determine if link was clicked
		 * @returns {Boolean} returns true if competed, false if terminated
		 */
		clickedAnchorTag = function(param_evt) {
			// navigate to links in menu
			if(param_evt && param_evt.target.nodeName === 'A') {
				window.location.href = param_evt.target.href;
				return false;
			}
			
			return true;
		};
			
		return {
			Init: function() {
				// enable menu
				if(dom.byId(config.nav_list_id)) {
					data.menuHandler = on(dom.byId('menu'), 'click', handleMenuOn);
					query('a[href="#menu"]').on('click', function() {handleMenuOn()});
				}
				
				// order by year descending
				config.content.sort(function(a, b) {
					return b.year - a.year;
				});
				
				console.log('iFoE Menu Init Complete.');
			},
			/*
			 * Externally invoke handleMenuOn
			 */
			Show: handleMenuOn,
			/*
			 * Externally invoke handleMenuOff
			 */
			Hide: handleMenuOff
		};
	}
);